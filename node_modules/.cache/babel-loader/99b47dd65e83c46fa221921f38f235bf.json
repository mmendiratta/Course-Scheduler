{"ast":null,"code":"var _jsxFileName = \"/Users/manni/OneDrive - UW-Madison/UW Madison Docs/CS 639/cs639-react-3-mmendiratta/src/Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Sections from './Sections';\nimport Card from 'react-bootstrap/Card';\nimport { Button, Accordion } from 'react-bootstrap';\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getSections = this.getSections.bind(this);\n    this.getSubsections = this.getSubsections.bind(this);\n    this.returnCourse = this.returnCourse.bind(this);\n  }\n\n  getSubsections(subsections) {\n    let array = []; //console.log(subsections);\n\n    for (const subs of Object.entries(subsections)) {\n      array.push(React.createElement(Accordion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, subs[0])), React.createElement(Accordion.Collapse, {\n        eventKey: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" Location: \", subs[1].location, \" \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" Days and Times: \", React.createElement(Sections, {\n        subsection: subs[1].time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(Button, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Add Subsection to Cart\")))));\n      return array;\n    }\n  }\n\n  getSections(data) {\n    let array = [];\n\n    for (const pair of Object.entries(data.sections)) {\n      //console.log(pair)\n      array.push(React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: pair[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, pair[0])), React.createElement(Accordion.Collapse, {\n        eventKey: pair[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" Instructor: \", pair[1].instructor, \" \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" Location: \", pair[1].location, \" \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" Days and Times: \", React.createElement(Sections, {\n        subsection: pair[1].time,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" \"), \" \"), React.createElement(Button, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Add Lecture to Cart\"), this.getSubsections(pair[1].subsections)))));\n    }\n\n    return array;\n  }\n\n  returnCourse(data) {\n    let carts = {};\n    console.log(\"clicked for all courses \");\n\n    for (const pair of Object.entries(data.sections)) {\n      //console.log(pair)\n      Object.assign(carts, data);\n    } //console.log(carts)\n\n\n    return carts;\n  }\n\n  render() {\n    return React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      width: \"70%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '75%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.data.name), React.createElement(Card.Subtitle, {\n      align: \"center\",\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.data.number, \" - \", this.getCredits()), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.data.description), React.createElement(Button, {\n      align: \"right\",\n      onClick: () => this.props.setCartCourses(this.returnCourse(this.props.data)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Add all to Cart\")), this.getSections(this.props.data)));\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/manni/OneDrive - UW-Madison/UW Madison Docs/CS 639/cs639-react-3-mmendiratta/src/Course.js"],"names":["React","Sections","Card","Button","Accordion","Course","Component","constructor","props","getSections","bind","getSubsections","returnCourse","subsections","array","subs","Object","entries","push","location","time","data","pair","sections","instructor","carts","console","log","assign","render","width","marginTop","marginBottom","name","number","getCredits","description","setCartCourses","credits"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Sections from './Sections';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Button, Accordion, } from 'react-bootstrap';\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getSections = this.getSections.bind(this);\r\n    this.getSubsections = this.getSubsections.bind(this);\r\n    this.returnCourse = this.returnCourse.bind(this);\r\n  }\r\n\r\n  getSubsections(subsections) {\r\n    let array = [];\r\n    //console.log(subsections);\r\n    for (const subs of Object.entries(subsections)) {\r\n      array.push(\r\n       \r\n        <Accordion>\r\n            <Card.Header align={\"center\"}>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={0}>\r\n                  {subs[0]}\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            \r\n            <Accordion.Collapse eventKey={0}>\r\n                <Card.Body>\r\n                    <ul> Location: {subs[1].location} </ul>\r\n                    <ul> Days and Times: <Sections subsection={subs[1].time }></Sections></ul>\r\n                    <Button align={\"right\"}>Add Subsection to Cart</Button>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Accordion>\r\n           \r\n      );\r\n      return array;\r\n    }\r\n  }\r\n\r\n  getSections(data) {\r\n    let array = [];\r\n    for(const pair of Object.entries(data.sections)) {\r\n     //console.log(pair)\r\n        array.push(\r\n          <React.Fragment>\r\n            <Card.Header align={\"center\"}>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={pair[0]}>\r\n                  {pair[0]}\r\n                </Accordion.Toggle>\r\n            </Card.Header>\r\n            \r\n            <Accordion.Collapse eventKey={pair[0]}>\r\n                <Card.Body>\r\n                    <ul> Instructor: {pair[1].instructor} </ul>\r\n                    <ul> Location: {pair[1].location} </ul>\r\n                    <ul> Days and Times: <Sections subsection={pair[1].time}> </Sections> </ul>\r\n                    <Button align={\"right\"}>Add Lecture to Cart</Button>\r\n               \r\n                   {this.getSubsections(pair[1].subsections)}\r\n                   </Card.Body>\r\n            </Accordion.Collapse>\r\n            </React.Fragment>\r\n        )\r\n      \r\n    }\r\n    \r\n    return array;\r\n  }\r\n\r\n  returnCourse(data) {\r\n    let carts = {}\r\n    console.log(\"clicked for all courses \")\r\n    for(const pair of Object.entries(data.sections)) {\r\n      //console.log(pair)\r\n     Object.assign(carts, data);\r\n    }\r\n    //console.log(carts)\r\n    return carts\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Accordion  defaultActiveKey=\"0\" width= '70%'>\r\n        <Card style={{width: '75%', marginTop: '5px', marginBottom: '5px'}}>\r\n          <Card.Body>\r\n            <Card.Title align={\"center\"}>{this.props.data.name}</Card.Title>\r\n            <Card.Subtitle align={\"center\"} className=\"mb-2 text-muted\">{this.props.data.number} - {this.getCredits()}</Card.Subtitle>\r\n            <Card.Text>{this.props.data.description}</Card.Text>\r\n            <Button align={\"right\"} onClick={() => this.props.setCartCourses(this.returnCourse(this.props.data))}>Add all to Cart</Button>\r\n          </Card.Body>\r\n            {this.getSections(this.props.data)}\r\n          </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n}\r\n\r\nexport default Course;\r\n"]},"metadata":{},"sourceType":"module"}