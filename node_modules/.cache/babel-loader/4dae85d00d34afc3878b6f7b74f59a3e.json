{"ast":null,"code":"class SearchAndFilter {\n  searchAndFilter(courses, search, subject, minimumCredits, maximumCredits) {\n    if (search.length !== 0) {\n      let coursesAfterSearch = [];\n\n      for (const course of Object.values(courses)) {\n        for (const keyword of course.keywords) {\n          if (search.indexOf(keyword) > -1) {\n            coursesAfterSearch.push(course);\n            break;\n          }\n        }\n      }\n\n      courses = coursesAfterSearch;\n    }\n\n    if (subject !== 'All') {\n      let coursesAfterSubject = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.subject === subject) coursesAfterSubject.push(course);\n      }\n\n      courses = coursesAfterSubject;\n    }\n\n    if (minimumCredits !== '') {\n      let coursesAfterMinimumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits >= parseInt(minimumCredits)) coursesAfterMinimumCredits.push(course);\n      }\n\n      courses = coursesAfterMinimumCredits;\n    }\n\n    if (maximumCredits !== '') {\n      let coursesAfterMaximumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits <= parseInt(maximumCredits)) coursesAfterMaximumCredits.push(course);\n      }\n\n      courses = coursesAfterMaximumCredits;\n    }\n\n    return courses;\n  }\n\n}\n\nexport default SearchAndFilter;","map":{"version":3,"sources":["/Users/manni/OneDrive - UW-Madison/UW Madison Docs/CS 639/cs639-react-3-mmendiratta/src/SearchAndFilter.js"],"names":["SearchAndFilter","searchAndFilter","courses","search","subject","minimumCredits","maximumCredits","length","coursesAfterSearch","course","Object","values","keyword","keywords","indexOf","push","coursesAfterSubject","coursesAfterMinimumCredits","credits","parseInt","coursesAfterMaximumCredits"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AAClBC,EAAAA,eAAe,CAACC,OAAD,EAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,cAA3B,EAA2CC,cAA3C,EAA2D;AACxE,QAAGH,MAAM,CAACI,MAAP,KAAkB,CAArB,EAAwB;AACtB,UAAIC,kBAAkB,GAAG,EAAzB;;AAEA,WAAI,MAAMC,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcT,OAAd,CAApB,EAA4C;AAC1C,aAAI,MAAMU,OAAV,IAAqBH,MAAM,CAACI,QAA5B,EAAsC;AACpC,cAAGV,MAAM,CAACW,OAAP,CAAeF,OAAf,IAA0B,CAAC,CAA9B,EAAiC;AAC/BJ,YAAAA,kBAAkB,CAACO,IAAnB,CAAwBN,MAAxB;AACA;AACD;AACF;AACF;;AACDP,MAAAA,OAAO,GAAGM,kBAAV;AACD;;AAED,QAAGJ,OAAO,KAAK,KAAf,EAAsB;AACpB,UAAIY,mBAAmB,GAAG,EAA1B;;AAEA,WAAI,MAAMP,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcT,OAAd,CAApB,EAA4C;AAC1C,YAAGO,MAAM,CAACL,OAAP,KAAmBA,OAAtB,EACEY,mBAAmB,CAACD,IAApB,CAAyBN,MAAzB;AACH;;AACDP,MAAAA,OAAO,GAAGc,mBAAV;AACD;;AAED,QAAGX,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIY,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMR,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcT,OAAd,CAApB,EAA4C;AAC1C,YAAGO,MAAM,CAACS,OAAP,IAAkBC,QAAQ,CAACd,cAAD,CAA7B,EACEY,0BAA0B,CAACF,IAA3B,CAAgCN,MAAhC;AACH;;AACDP,MAAAA,OAAO,GAAGe,0BAAV;AACD;;AAED,QAAGX,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIc,0BAA0B,GAAG,EAAjC;;AAEA,WAAI,MAAMX,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcT,OAAd,CAApB,EAA4C;AAC1C,YAAGO,MAAM,CAACS,OAAP,IAAkBC,QAAQ,CAACb,cAAD,CAA7B,EACEc,0BAA0B,CAACL,IAA3B,CAAgCN,MAAhC;AACH;;AACDP,MAAAA,OAAO,GAAGkB,0BAAV;AACD;;AAED,WAAOlB,OAAP;AACD;;AA/CiB;;AAkDpB,eAAeF,eAAf","sourcesContent":["class SearchAndFilter {\n    searchAndFilter(courses, search, subject, minimumCredits, maximumCredits) {\n      if(search.length !== 0) {\n        let coursesAfterSearch = [];\n  \n        for(const course of Object.values(courses)) {\n          for(const keyword of course.keywords) {\n            if(search.indexOf(keyword) > -1) {\n              coursesAfterSearch.push(course);\n              break;\n            }\n          }\n        }\n        courses = coursesAfterSearch;\n      }\n  \n      if(subject !== 'All') {\n        let coursesAfterSubject = [];\n  \n        for(const course of Object.values(courses)) {\n          if(course.subject === subject)\n            coursesAfterSubject.push(course)\n        }\n        courses = coursesAfterSubject;\n      }\n  \n      if(minimumCredits !== '') {\n        let coursesAfterMinimumCredits = [];\n  \n        for(const course of Object.values(courses)) {\n          if(course.credits >= parseInt(minimumCredits))\n            coursesAfterMinimumCredits.push(course);\n        }\n        courses = coursesAfterMinimumCredits;\n      }\n  \n      if(maximumCredits !== '') {\n        let coursesAfterMaximumCredits = [];\n  \n        for(const course of Object.values(courses)) {\n          if(course.credits <= parseInt(maximumCredits))\n            coursesAfterMaximumCredits.push(course);\n        }\n        courses = coursesAfterMaximumCredits;\n      }\n  \n      return courses;\n    }\n  }\n  \n  export default SearchAndFilter;"]},"metadata":{},"sourceType":"module"}